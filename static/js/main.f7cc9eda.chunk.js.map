{"version":3,"sources":["components/Sudoku.js","components/Cell.js","components/Board.js","components/primitives/Modal/styled.js","components/primitives/Icon/Remove.js","components/primitives/Modal/Modal.js","components/primitives/Modal/index.js","components/primitives/Button/styled.js","components/primitives/Button/Button.js","components/DifficultyModal/styled.js","components/DifficultyModal/DifficultyModal.js","components/primitives/Icon/Lanars.js","components/Game.js","App.js","styled/global.js","reportWebVitals.js","index.js","styled/themes.js"],"names":["randomlyGeneratedValue","min","max","Math","floor","random","verifyRow","grid","row","val","col","value","verifyCol","verifyBox","startRow","parseInt","startCol","r","c","isValid","num","verifySudoku","checkSubset","array","nums","i","hasOwnProperty","hasConflict","removingEntries","newGrid","difficulty","minToRemove","maxToRemove","subgridY","subgridX","entriesToRemove","randArray","length","rNum","indexOf","push","editable","createGrid","arr","innerArr","j","shuffle","a","solve","shuffled","forEach","choice","checkConflicts","matrix","markAllWithoutConflict","isComplete","cell","Cell","handleKeyPress","Container","marginRight","marginBottom","Input","color","conflict","onKeyDown","e","number","key","onChange","console","log","styled","div","props","input","Board","solved","newGame","setNewGame","handleUnSolve","useState","setGrid","generateBoard","gridNewly","sudokuRules","gridCopy","cloneDeep","test","Number","useEffect","handleSolveSudoku","style","display","justifyContent","map","rowIndex","colIndex","StyledOverlay","fadeType","StyledContainer","size","background","StyledClose","RemoveSmall","xmlns","width","height","viewBox","id","data-name","transform","d","fill","stroke","strokeLinecap","strokeLinejoin","Modal","isOpen","onClose","hasCloseIcon","children","closeConfirmation","Confirmation","setFadeType","handleClose","preventDefault","setTimeout","success","ReactDOM","createPortal","onClick","className","stopPropagation","Remove","document","body","defaultProps","closeIconColor","button","fluid","fontSize","theme","palette","circular","css","Button","variant","active","rest","disabled","FormContainer","withTheme","handleDifficulty","useForm","defaultValues","register","handleSubmit","textAlign","onSubmit","data","margin","padding","black","type","name","ref","big","marginLeft","Lanars","fillRule","clipRule","setDifficulty","modalShow","setModalShow","setSolved","diff","flexDirection","alignItems","writingMode","textOrientation","marginTop","App","GlobalStyle","createGlobalStyle","fontFamily","default","bold","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","tiny","mini","small","large","white","whiteSecondary","primary","info","transparent","200","300","500","1000","inverted","700","800","900","elementSize","borderRadius","rounded","boxShadow","spacing","noSpacing","extraLarge","huge","extraHuge","animation","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","short","complex","enteringScreen","leavingScreen","getElementById"],"mappings":"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","file":"static/js/main.f7cc9eda.chunk.js","sourcesContent":["function randomlyGeneratedValue(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n// After solving the puzzle, remove the elements dependent on what mode is on.\nconst removingEntries = (newGrid, difficulty) => {\n  let minToRemove\n  let maxToRemove\n  if (difficulty === 'Easy') {\n    minToRemove = 4\n    maxToRemove = 7\n  } else if (difficulty === 'Medium') {\n    minToRemove = 5\n    maxToRemove = 8\n  } else if (difficulty === 'Hard') {\n    minToRemove = 6\n    maxToRemove = 9\n  } \n\n    // Random number between max number and min number of values that needs to be delete\n    for(let subgridY = 0; subgridY < 3; subgridY ++){\n      for(let subgridX = 0; subgridX < 3; subgridX++){\n        let entriesToRemove = randomlyGeneratedValue(minToRemove, maxToRemove)\n        let randArray = []\n        // Insuring that we get unique values in the array\n        while(randArray.length < entriesToRemove){\n          let rNum = randomlyGeneratedValue(0,8)\n          if(randArray.indexOf(rNum) === -1) randArray.push(rNum)\n        }\n        for(let i = 0; i < randArray.length; i++){\n          let r = subgridY*3+Math.floor(randArray[i]/3)\n          let c = subgridX*3+randArray[i]%3\n          newGrid[r][c].value = null // Making the value null\n          newGrid[r][c].editable = true // Making the editable true so the user can fill in\n        }\n      }\n    }\n\n}\n\n// Create grid with objects that have value of null are all editable and no conflicts each\nconst createGrid = () => {\n  let arr = []\n\n  for (let i = 0; i < 9; i++) {\n    let innerArr = []\n    for (let j = 0; j < 9; j++) {\n      innerArr.push({value: null, editable: true, hasConflict: false })\n    }\n    arr.push(innerArr)\n  }\n\n  return arr\n}\n\nconst shuffle = a => {\n  for (let i = a.length - 1; i > 0; i--) {\n    // This semicolon is required\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]]\n  }\n  return a\n}\n\n// Verify that there are no duplicates in the row\nconst verifyRow = (grid, row, val = null) => {\n  for (let col = 0; col < 9; col++) {\n    if (grid[row][col].value === val) {\n      return false\n    }\n  }\n  return true\n}\n\n// Verify that there are no duplicates in the column\nconst verifyCol = (grid, col, val = null) => {\n  for (let row = 0; row < 9; row++) {\n    if (grid[row][col].value === val) {\n      // console.log('match:', grid[row][col])\n      return false\n    }\n  }\n  return true\n}\n\n// Verify that there are no duplicates in each sub grid\nconst verifyBox = (grid, row, col, val = null) => {\n  let startRow = parseInt(row / 3) * 3\n  let startCol = parseInt(col / 3) * 3\n\n  for (let r = startRow; r < startRow + 3; r++) {\n    for (let c = startCol; c < startCol + 3; c++) {\n      if (grid[r][c].value === val) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\nconst isValid = (grid, row, col, num = null) => {\n  if (verifyBox(grid, row, col, num) &&verifyCol(grid, col, num) && verifyRow(grid, row, num)) {\n    return true\n  }\n  return false\n}\n\nconst verifySudoku = grid => {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (!isValid(grid, row, col)) {\n        return false\n      }\n    }\n  }\n  return true\n}\nfunction markAllWithoutConflict(matrix) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      matrix[i][j].hasConflict = false\n    }\n  }\n}\nconst solve = (grid, shuffled) => {\n  for (let row = 0; row < 9; row++) {\n    for (let col = 0; col < 9; col++) {\n      if (grid[row][col].value === null) {\n        shuffled.forEach(choice => {\n          if (isValid(grid, row, col, choice)) {\n            grid[row][col].value = choice\n            grid[row][col].editable = false\n            solve(grid, shuffled)\n            if (!verifySudoku(grid)) {\n              grid[row][col].value = null\n            }\n          }\n        })\n        return\n      }\n    }\n  }\n  return grid\n}\n\n// Check if game is complete. No cell is with coflicts and with null value. if so, than make everything not editable\nfunction isComplete(matrix) {\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      let cell = matrix[i][j];\n      if (cell.hasConflict || cell.value === null) {\n        return false;\n      }\n    }\n  }\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      matrix[i][j].editable = false\n    }\n  }\n  return true\n}\n\nconst checkSubset = (array) => {\n  let nums = {}\n  for (let i = 0; i < 9; i++) {\n    if (array[i].value !== null && nums.hasOwnProperty(array[i].value)) {\n      array[i].hasConflict = true\n      array[nums[array[i].value]].hasConflict = true\n    }\n    nums[array[i].value] = i\n  }\n}\n\n// Check for conflicts in every cell in horizontal line, vertical and in the boxes. If found duplicates, make their conflicts true\nfunction checkConflicts(matrix) {\n  markAllWithoutConflict(matrix)\n\n  // check horizontal lines\n  for (let i = 0; i < 9; i++) {\n    let arr = [];\n    for (let j = 0; j < 9; j++) {\n      arr.push(matrix[i][j])\n    }\n    checkSubset(arr)\n  }\n\n  // check vertical lines\n  for (let j = 0; j < 9; j++) {\n    let arr = [];\n    for (let i = 0; i < 9; i++) {\n      arr.push(matrix[i][j])\n    }\n    checkSubset(arr)\n  }\n\n  // check squares\n  let c = matrix\n  checkSubset([c[0][0], c[0][1], c[0][2], c[1][0], c[1][1], c[1][2], c[2][0], c[2][1], c[2][2]])\n  checkSubset([c[3][0], c[3][1], c[3][2], c[4][0], c[4][1], c[4][2], c[5][0], c[5][1], c[5][2]])\n  checkSubset([c[6][0], c[6][1], c[6][2], c[7][0], c[7][1], c[7][2], c[8][0], c[8][1], c[8][2]])\n\n  checkSubset([c[0][3], c[0][4], c[0][5], c[1][3], c[1][4], c[1][5], c[2][3], c[2][4], c[2][5]])\n  checkSubset([c[3][3], c[3][4], c[3][5], c[4][3], c[4][4], c[4][5], c[5][3], c[5][4], c[5][5]])\n  checkSubset([c[6][3], c[6][4], c[6][5], c[7][3], c[7][4], c[7][5], c[8][3], c[8][4], c[8][5]])\n\n  checkSubset([c[0][6], c[0][7], c[0][8], c[1][6], c[1][7], c[1][8], c[2][6], c[2][7], c[2][8]])\n  checkSubset([c[3][6], c[3][7], c[3][8], c[4][6], c[4][7], c[4][8], c[5][6], c[5][7], c[5][8]])\n  checkSubset([c[6][6], c[6][7], c[6][8], c[7][6], c[7][7], c[7][8], c[8][6], c[8][7], c[8][8]])\n}\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  randomlyGeneratedValue,\n  verifyRow,\n  verifyCol,\n  verifyBox,\n  removingEntries,\n  createGrid,\n  isValid,\n  verifySudoku,\n  shuffle,\n  solve,\n  checkConflicts,\n  isComplete\n};\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Cell = ({cell, handleKeyPress, row, col}) => {\n  \n    const handleChange = (e) => {\n      const number = e.key\n      if(!cell.editable){\n        return\n      }\n      if (number === 'Backspace' || number === 'Delete') {\n        handleKeyPress(null, row, col)\n      } else {\n        handleKeyPress(number, row, col)\n      }\n    }\n\n    const renderColor = () => {\n      if(cell.hasConflict){\n        return 'red'\n      }else if(!cell.editable){\n        return 'rgba(0,0,0,0.4)'\n      }\n      return '#000'\n    }\n    \n      return (\n        <Container \n        marginRight={(col + 1) % 3}\n        marginBottom={(row + 1) % 3}\n        >\n          <Input\n            color={renderColor()}\n            conflict={cell.hasConflict}\n            value={cell.value === null ? '' : cell.value}\n            onKeyDown={handleChange} \n            onChange={() => console.log()}\n            />\n        </Container>\n      )\n  \n  }\n\n  export default Cell\n\n  const Container = styled.div `\n    margin-right: ${props => props.marginRight ? '0' : '1rem'};\n    margin-bottom: ${props => props.marginBottom ? '0' : '1rem'};\n    font-size: 2.5rem;\n    display: inline-block;\n    width: 4.25rem;\n    height: 4.25rem;\n    padding: 2px;\n    border-radius: 0.5rem;\n  `\n  const Input = styled.input `\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-size: 1.5rem;\n    color: ${props => props.color};\n    background-color: ${props => props.conflict ? 'rgba(255, 56, 56, 0.05)' : '#fff'};\n    border: ${props => props.conflict ? '1px solid #FF3838' : '1px solid #000'};\n    border-radius: 0.5rem;\n    &:focus {\n      outline:none;\n    }\n  `","import React, { useState, useEffect } from 'react'\nimport sudokuRules from './Sudoku'\nimport cloneDeep from 'lodash.clonedeep'\nimport Cell from './Cell'\n\nconst Board = ({difficulty, solved, newGame, setNewGame, handleUnSolve}) => {\n\n    const [ grid, setGrid ] = useState([])\n\n    const generateBoard = () => {\n      let gridNewly = sudokuRules.createGrid()\n      sudokuRules.solve(gridNewly, sudokuRules.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n      sudokuRules.removingEntries(gridNewly, difficulty)\n      handleUnSolve()\n      setNewGame(false)\n      setGrid(gridNewly)\n    }\n\n    const handleKeyPress = (key, row, col) => {\n      const regex = /^[0-9\\b]+$/\n      const gridCopy = cloneDeep(grid)\n      if(key){\n        if(regex.test(key) && key > 0){\n          gridCopy[row][col].value = Number(key)\n        }\n      }else{\n        gridCopy[row][col].value = key\n      }\n        setGrid(gridCopy)\n        sudokuRules.checkConflicts(gridCopy)\n    }\n\n    const handleSolveSudoku = () => {\n      const gridCopy = cloneDeep(grid)\n      sudokuRules.solve(gridCopy, sudokuRules.shuffle([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n      setGrid(gridCopy)\n    }\n\n    useEffect(() => {\n        generateBoard()\n    }, [])  \n\n    useEffect(() =>{\n      generateBoard()\n    }, [newGame])\n\n    useEffect(() => {\n      if(solved){\n        handleSolveSudoku()\n      }\n    }, [solved])\n\n    return (\n      <>\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <div>\n              {grid.map((row, rowIndex) => {\n                return (\n                  <div key={rowIndex}>\n                    {row.map((cell, colIndex) => {\n                      return <Cell key={`${rowIndex}${colIndex}`} cell={cell} row={rowIndex} col={colIndex} handleKeyPress={handleKeyPress} />\n                    })}\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n        </>\n    )\n}\n\nexport default Board\n","import styled from 'styled-components'\n\nconst StyledOverlay = styled.div`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background-color: rgba(0, 0, 0, 0.6);\n  transition: all 0.2s ease-in;\n  overflow: overlay;\n  opacity: ${props => {\n    switch (props.fadeType) {\n      case 'in':\n        return '1'\n      default:\n        return '0'\n    }\n  }};\n  transition: ${props => {\n    switch (props.fadeType) {\n      case 'in':\n        return 'opacity 0.1s ease-in-out'\n      case 'out':\n        return 'opacity 0.1s ease-in-out'\n      default:\n        return ''\n    }\n  }};\n`\nconst StyledContainer = styled.div`\n  position: absolute;\n  min-height: 200px;\n  min-width: 240px;\n  max-width: 96%;\n  padding: 2.5rem;\n  width: ${props => {\n    switch (props.size) {\n      case 'large':\n        return '964px'\n      case 'medium':\n        return '815px'\n      case 'small':\n        return '450px'\n      default:\n        return props.size\n    }\n  }};\n  background-color: ${props => props.background || '#fff'};\n  border-radius: 10px;\n  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.06);\n  transform: ${props => {\n    switch (props.fadeType) {\n      case 'in':\n        return 'scale(1)'\n      default:\n        return 'scale(0.82)'\n    }\n  }};\n  transition: ${props => {\n    switch (props.fadeType) {\n      case 'in':\n        return 'transform 0.1s'\n      case 'out':\n        return 'transform 0.1s'\n      default:\n        return ''\n    }\n  }};\n`\n\n\nconst StyledClose = styled.div`\n  position: absolute;\n  top: 2.5rem;\n  right: 2rem;\n  border-radius: 10rem;\n  cursor: pointer;\n  display: flex;\n  height: 2rem;\n  width: 2rem;\n  justify-content: center;\n  align-items: center;\n`\n\nexport {\n  StyledOverlay, StyledContainer, StyledClose\n}\n","import React from 'react'\n\nexport const RemoveSmall = ({ color, size }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={size || 9} height={size || 9} viewBox=\"0 0 8.743 8.743\">\n    <g id=\"x_1_\" data-name=\"x (1)\" transform=\"translate(.707 .707)\">\n      <path\n        id=\"Line_345\"\n        d=\"M7.329 0L0 7.329\"\n        style={{\n          fill: 'none',\n          stroke: color || 'rgba(0,0,0,0.54)',\n          strokeLinecap: 'round',\n          strokeLinejoin: 'round'\n        }}\n        data-name=\"Line 345\"\n      />\n      <path\n        id=\"Line_346\"\n        d=\"M0 0l7.329 7.329\"\n        style={{\n          fill: 'none',\n          stroke: color || 'rgba(0,0,0,0.54)',\n          strokeLinecap: 'round',\n          strokeLinejoin: 'round'\n        }}\n        data-name=\"Line 346\"\n      />\n    </g>\n  </svg>\n)\n\nexport default RemoveSmall\n","import React, { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\n\nimport { StyledOverlay, StyledContainer, StyledClose } from './styled'\nimport { Remove } from '../Icon'\n\nconst Modal = ({\n  isOpen,\n  onClose,\n  hasCloseIcon,\n  children,\n  size,\n  closeConfirmation,\n  Confirmation,\n  background\n}) => {\n  const [fadeType, setFadeType] = useState('out')\n\n  const handleClose = e => {\n    if (e) e.preventDefault()\n    if (!closeConfirmation) setFadeType('out')\n    setTimeout(() => {\n      onClose({ success: false })\n    }, 200)\n  }\n\n  useEffect(\n    () => {\n      setTimeout(() => {\n        if (isOpen) setFadeType('in')\n      }, 200)\n    },\n    [isOpen]\n  )\n\n  if (isOpen) {\n    return ReactDOM.createPortal(\n      <StyledOverlay isOpen={isOpen} onClick={handleClose} fadeType={fadeType}>\n        <StyledContainer\n          className=\"modal\"\n          onClick={e => e.stopPropagation()}\n          fadeType={fadeType}\n          size={size}\n          background={background}\n        >\n          {hasCloseIcon && (\n            <StyledClose onClick={handleClose}>\n              <Remove />\n            </StyledClose>\n          )}\n          {children}\n        </StyledContainer>\n        {closeConfirmation && Confirmation}\n      </StyledOverlay>,\n      document.body\n    )\n  }\n\n  return null\n}\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  hasCloseIcon: PropTypes.bool,\n  closeIconColor: PropTypes.string,\n  size: PropTypes.string,\n  closeConfirmation: PropTypes.bool,\n  Confirmation: PropTypes.object\n}\n\nModal.defaultProps = {\n  isOpen: false,\n  onClose: () => {},\n  hasCloseIcon: true,\n  closeIconColor: null,\n  size: 'default',\n  closeConfirmation: false,\n  Confirmation: null\n}\n\nexport default Modal\n","import Modal from './Modal'\n\nexport default Modal\n","import styled, { css } from 'styled-components'\n\nconst StyledContainer = styled.button`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${props => (props.fluid ? '100%' : 'auto')};\n    font-size: ${props => props.fontSize ? props.fontSize : '1.3rem'};\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    height: 3.875rem;\n    animation: all .5s ease-out .75s;\n    animation-fill-mode: backwards;\n    &:active,\n    &:focus {\n        outline: none;\n        transform: translateY(-1px);\n        box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);\n    }\n    background-color: ${props => props.theme.palette[props.color][200]};\n    color: ${props => props.theme.palette[props.color][1000]};\n  ${props => props.circular\n    && css`\n      border-radius: 1.68rem;\n      padding: 0.625rem 1.5rem 0.625rem 0.625rem;\n      height: 2.8rem;\n    `};\n    ${props => props.button\n    && css`\n    &:hover {\n      transform: translateY(-3px);\n      transition-duration: .3s;\n      box-shadow: 0 1rem 2rem rgba(0,0,0,.2);\n        &::after {\n          transform: scaleX(1.4) scaleY(1.6);\n          opacity: 0;\n      }\n    }\n    `}\n`\n\nexport default StyledContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport StyledContainer from './styled'\n\nimport { variants, colors } from '../../../styled/oneOf'\n\n\nconst Button = ({\n  children,\n  size,\n  color,\n  fluid,\n  variant,\n  active,\n  onClick,\n  ...rest\n}) => (\n  <StyledContainer\n    variant={variant}\n    color={color}\n    fluid={fluid}\n    active={active}\n    onClick={onClick}\n    {...rest}\n  >\n    {children}\n  </StyledContainer>\n)\n\nButton.propTypes = {\n  color: PropTypes.oneOf(colors),\n  fluid: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  active: PropTypes.bool,\n  variant: PropTypes.oneOf(variants)\n}\n\nButton.defaultProps = {\n  color: 'default',\n  fluid: false,\n  disabled: false,\n  onClick: () => {},\n  active: false,\n  variant: 'default'\n}\n\nexport default Button\n","import styled from 'styled-components'\n\n\nconst StyledContainer = styled.div`\n    background-color: #fff;\n    border-radius: 10px 10px 0 10px;\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n`\nconst FormContainer = styled.div `\n    padding: 0 2rem;\n`\nexport {\n  StyledContainer, FormContainer\n}\n","import React from 'react'\nimport Modal from '../primitives/Modal'\nimport Button from '../primitives/Button'\nimport  { withTheme } from 'styled-components'\nimport { FormProvider, useForm } from \"react-hook-form\"\nimport {\n  StyledContainer,\n  FormContainer\n} from './styled'\n\nconst DifficultyModal = ({ isOpen, onClose, difficulty, theme, handleDifficulty }) => {\n    const { register, handleSubmit } = useForm({\n        defaultValues: {\n            difficulty\n        }\n      })\n      const onSubmit = data => {\n          handleDifficulty(data.difficulty)\n          onClose()\n      }\n    return(\n        <Modal isOpen={isOpen} onClose={onClose} size=\"medium\">\n            <StyledContainer>\n                <h1 style={{fontSize: '2.4rem', textAlign: 'center'}}>Choose Difficulty</h1>\n                <FormContainer>\n                    <FormProvider>\n                        <form onSubmit={handleSubmit(onSubmit)}>\n                            <div style={{margin: '4rem 0 6rem 0', padding: '0 4rem'}}>\n                                <div style={{marginBottom: '1rem', color: theme.color.black}}>\n                                    <input type=\"radio\" name=\"difficulty\" value=\"Easy\" ref={register} />\n                                    <label style={{fontSize: theme.fontSize.big, marginLeft: '2rem'}}>Easy 3-5 preffiled numbers</label>\n                                </div>\n                                <div style={{marginBottom: '1rem', color: theme.color.black}}>\n                                    <input type=\"radio\" name=\"difficulty\" value=\"Medium\" ref={register} />\n                                    <label style={{fontSize: theme.fontSize.big, marginLeft: '2rem'}}>Medium 2-4 preffiled numbers</label>\n                                </div>\n                                <div style={{marginBottom: '1rem', color: theme.color.black}}>\n                                    <input type=\"radio\" name=\"difficulty\" value=\"Hard\" ref={register} />\n                                    <label style={{fontSize: theme.fontSize.big, marginLeft: '2rem'}}>Hard 1-3 preffiled numbers</label>\n                                </div>\n                            </div>\n                            <Button \n                                style={{width: '20rem', margin: 'auto'}}\n                                variant=\"primary\" \n                                color=\"primary\" \n                                fontSize={theme.fontSize.big}\n                                fluid \n                                circular \n                                button\n                                >\n                                Create\n                            </Button>\n                        </form>\n                    </FormProvider>\n                </FormContainer>\n            </StyledContainer>\n        </Modal>\n    )\n}\nexport default withTheme(DifficultyModal)\n","import React from 'react'\n\nexport const Lanars = ({ size }) => (\n    <svg width=\"95\" height=\"119\" viewBox=\"0 0 95 119\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32.8492 63.5666L34.4466 66.0645C33.7479 65.3483 33.2522 64.4977 32.8492 63.5666ZM38.5491 38.1907C38.5014 38.1728 38.4506 38.1579 38.4058 38.137L36.883 42.3449C37.5668 41.0109 38.1013 39.6172 38.5491 38.1907ZM29.0482 56.5265C28.8481 58.5857 28.9825 60.636 29.2154 62.6832C28.4958 61.1284 28.4719 58.2276 29.0482 56.5265ZM71.0591 30.9954C70.9098 30.8761 70.7754 30.7776 70.65 30.6701C69.8528 29.9837 69.0795 29.2675 68.2614 28.6109C66.7684 27.4202 65.1322 26.4503 63.3884 25.6654C60.0497 24.1639 56.4042 23.4687 52.7469 23.636C52.1497 23.6599 51.5316 23.6569 50.9583 23.8867C50.1999 24.1941 49.4505 24.5254 48.6981 24.8566C48.2813 25.0584 47.9257 25.3674 47.6679 25.7519C46.562 27.2495 45.6426 28.8759 44.9299 30.5955C44.282 32.1205 43.6938 33.6754 43.0847 35.2153C43.0548 35.2899 43.0608 35.3764 43.0458 35.469C43.1832 35.5287 43.2996 35.5824 43.4221 35.6242C44.3298 35.9524 45.2434 36.2538 46.1452 36.609C46.6617 36.806 47.1305 36.8328 47.6829 36.6806C49.5013 36.1912 51.3704 36.0479 53.2425 35.9912C55.5386 35.9196 57.8258 36.0211 60.101 36.2777C61.2655 36.409 62.421 36.5463 63.5706 36.7373C65.0187 36.9761 66.4639 37.2566 67.9001 37.555C68.9421 37.7729 69.9902 38.0027 71.0053 38.3011C72.2982 38.6861 73.5732 38.7309 74.878 38.3817C75.6125 38.1786 76.357 38.0132 77.1084 37.8863C78.8193 37.6272 80.5518 37.5412 82.2799 37.6296C82.4262 37.6356 82.5755 37.6058 82.7517 37.5879C82.6979 37.4177 82.6741 37.3073 82.6323 37.1999C81.2405 33.6833 78.7032 30.7383 75.4304 28.8407C74.9856 28.5722 74.4871 28.4051 73.9703 28.3513C73.4883 28.2854 72.9979 28.3741 72.5697 28.6047C72.1414 28.8354 71.7975 29.196 71.5876 29.6346C71.3875 30.0434 71.2532 30.4851 71.0561 30.9954H71.0591ZM79.8793 73.4985C80.0316 73.2866 80.163 73.1165 80.2734 72.9345C81.3364 71.1976 82.2351 69.3771 82.9756 67.4791C83.6799 65.7081 84.1982 63.8689 84.5223 61.9909C84.8607 60.1443 84.9291 58.2584 84.7253 56.3922C84.6567 55.8491 84.5969 55.3029 84.5223 54.7628C84.4715 54.4047 84.4238 54.3748 84.0804 54.4047C82.8741 54.5121 81.6917 54.3957 80.5302 54.0674C79.739 53.8406 78.9627 53.5601 78.2849 53.0796C77.2816 52.3693 76.6874 51.3547 76.2694 50.2296C75.6364 48.5344 75.3946 46.7677 75.3139 44.9741C75.2841 44.428 75.2781 43.8759 75.2273 43.3327C75.1348 42.2972 74.5854 41.563 73.6628 41.1064C73.3544 40.9389 72.995 40.8911 72.6535 40.9721C72.3348 41.0577 72.0208 41.1603 71.713 41.2795C71.3666 41.4138 71.1278 41.6287 71.1606 42.0554C71.1755 42.2046 71.1128 42.3658 71.0979 42.524C70.9181 44.3364 70.4441 46.1074 69.6946 47.7675C69.0436 49.2 68.1718 50.4773 66.9894 51.5277C65.4248 52.9214 63.5855 53.7869 61.5969 54.3539C60.3757 54.7031 59.1336 54.9209 57.8557 54.9866C56.6057 55.0686 55.3504 54.9904 54.1204 54.7538C52.6185 54.4464 51.3943 53.7332 50.5105 52.435C49.6307 51.1111 49.0218 49.6262 48.719 48.0659C48.4144 46.6066 48.3308 45.1233 48.2382 43.6401C48.2024 43.094 48.1964 42.5359 48.068 42.0107C47.874 41.2138 47.4709 40.5065 46.6199 40.2648C44.9837 39.8052 43.3355 39.3874 41.6932 38.9517C41.3618 38.8681 41.3588 38.8741 41.1827 39.1696C40.7049 39.9604 40.2272 40.7483 39.7584 41.5421C39.6733 41.6922 39.6081 41.8527 39.5643 42.0196C39.3852 42.6463 39.2329 43.273 39.0478 43.8968C38.582 45.4606 38.0565 47.0005 37.2802 48.4449C36.9308 49.0955 36.5337 49.7133 36.0171 50.2475C35.6624 50.6489 35.2004 50.9409 34.6855 51.089C34.5063 51.1338 34.3271 51.1756 34.1032 51.0353L34.3719 50.8652C34.5869 50.725 34.8198 50.6026 35.0199 50.4414C35.6887 49.9102 36.1306 49.2 36.5158 48.4539C37.1966 47.1408 37.6176 45.7292 37.9609 44.2967C37.9878 44.1892 37.9997 44.0818 38.0206 43.9744C37.8378 44.0652 37.6753 44.1921 37.5429 44.3474C36.8677 45.0798 36.1057 45.7272 35.2737 46.2753C35.0453 46.4246 34.8592 46.6302 34.7332 46.8722C34.0554 48.1107 33.3597 49.3402 32.6879 50.5817C32.5781 50.782 32.5206 51.0068 32.5207 51.2353C32.5446 52.0828 32.5745 52.9364 32.6581 53.7809C32.8193 55.4044 33.1388 57.004 33.6135 58.5678C34.2645 60.6986 35.1751 62.722 36.3217 64.635C36.9577 65.7034 37.6534 66.7211 38.5402 67.6044C39.3046 68.3684 40.0331 69.1712 40.7617 69.968C41.0274 70.2605 41.317 70.5022 41.6723 70.6753C42.0754 70.8723 42.4666 71.0931 42.8458 71.3259C43.8341 71.9317 44.7567 72.6181 45.3629 73.6447C45.5149 73.9052 45.7538 74.1038 46.0377 74.2058C47.6679 74.8653 49.2982 75.5189 50.9106 76.2172C52.8424 77.0558 54.7205 78.0019 56.4792 79.1688C57.2018 79.6463 57.8885 80.1715 58.4857 80.8072C58.8716 81.1794 59.1483 81.65 59.2859 82.168C59.3307 82.3471 59.3725 82.5381 59.1694 82.7172C59.0918 82.6485 59.0022 82.5829 58.9276 82.5083C58.6887 82.2606 58.4618 81.992 58.211 81.7622C57.0345 80.6729 55.6849 79.8522 54.2697 79.124C52.3647 78.1511 50.3582 77.4229 48.3159 76.8052C47.9755 76.7037 47.6291 76.6142 47.2529 76.5097C47.2887 76.5754 47.2977 76.6082 47.3156 76.6201C47.3903 76.6649 47.4649 76.7067 47.5455 76.7395C49.0798 77.4028 50.5517 78.2018 51.9437 79.127C53.5421 80.1656 54.9728 81.4417 56.1866 82.9111C56.2791 83.0305 56.3597 83.1588 56.4463 83.2812C56.4198 83.3044 56.3939 83.3282 56.3687 83.3528C55.2534 82.3376 54.0559 81.4163 52.7887 80.5983C51.1465 79.5388 49.1937 78.5033 48.7757 78.4943C49.1579 78.7271 49.5222 78.93 49.8685 79.1598C50.8538 79.8074 51.8362 80.464 52.8126 81.1265C52.9857 81.2399 53.1201 81.407 53.2724 81.5503C53.2533 81.5826 53.2334 81.6144 53.2127 81.6458L51.7765 81.1951L51.7466 81.2817C51.869 81.3473 51.9914 81.422 52.1139 81.4906C54.1659 82.5473 56.1005 83.8178 57.8855 85.2807C58.7723 86.0208 59.5875 86.8326 60.3041 87.7428C60.4056 87.8652 60.5429 87.9815 60.5071 88.2203C59.4441 87.7876 58.4319 87.313 57.3451 87.0206C59.7412 89.4553 62.4681 91.5409 65.4457 93.2161C65.4965 93.0251 65.5472 92.846 65.586 92.664C65.7532 91.891 65.9145 91.1121 66.0847 90.3422C66.1175 90.1929 66.0996 90.0139 66.3385 89.9244C66.5116 90.1929 66.6968 90.4615 66.861 90.745C68.1897 93.0161 69.3572 95.3529 69.6916 98.0269C70.5575 96.1467 71.3875 94.2606 71.7458 92.1895C71.8414 92.3327 71.8951 92.476 71.934 92.6222L72.4714 94.759C72.5072 94.8903 72.561 95.0127 72.6297 95.2066C72.8118 94.9918 72.9462 94.8426 73.0686 94.6874C74.0121 93.4936 74.8183 92.2223 75.4782 90.8495C76.2455 89.2469 76.7681 87.5757 76.8576 85.794C76.9233 84.5257 77.2219 83.3081 77.6638 82.1322C78.1475 80.837 78.7029 79.5687 79.2344 78.2914C79.6046 77.3961 79.9958 76.5097 80.1898 75.5607C80.3076 75.0815 80.2942 74.5795 80.151 74.1073C80.0405 73.779 79.8405 73.6209 79.4792 73.6298C78.688 73.6418 77.8967 73.6298 77.1025 73.6179C75.1975 73.588 73.2985 73.7373 71.4114 73.9462C69.6677 74.1401 67.9359 74.4505 66.2011 74.7072C65.8428 74.7579 65.4905 74.8295 65.1352 74.8624C63.86 74.9942 62.5752 75.0032 61.2983 74.8892C59.3262 74.7051 57.4111 74.1266 55.667 73.1881C53.0813 71.7855 51.1136 69.7382 49.5639 67.2612C48.7428 65.9481 48.071 64.5664 47.5395 63.113C47.4918 62.9817 47.4261 62.8623 47.3514 62.7071C47.1245 62.8116 46.9394 62.8862 46.7662 62.9847C45.9809 63.4323 45.3091 64.0143 44.7209 64.6977C44.6373 64.7991 44.5865 64.9603 44.3656 64.9066C44.3656 64.7872 44.3477 64.6708 44.3716 64.5634C44.482 64.071 44.5686 63.5726 44.7299 63.0951C44.9389 62.4445 45.2822 61.8566 45.7988 61.394C46.6856 60.6002 47.7396 60.436 48.8712 60.5882C50.0297 60.7494 51.0867 61.206 52.1109 61.7402C52.1706 61.77 52.2094 61.8297 52.3468 61.9491L51.7944 61.958C51.1763 61.964 50.5553 61.958 49.9402 61.9819C49.5759 61.9968 49.5102 62.0953 49.5759 62.4505C49.6326 62.7787 49.6953 63.107 49.7849 63.4234C50.4338 65.722 51.5898 67.8462 53.1679 69.6397C54.6326 71.343 56.5263 72.6237 58.6529 73.3493C60.3791 73.9264 62.2036 74.1517 64.0185 74.0118C65.38 73.9163 66.7057 73.6925 67.9896 73.2299C70.229 72.4241 71.9399 71.0066 72.976 68.834C73.7553 67.2105 74.0061 65.4826 73.9584 63.7009C73.9524 63.4502 73.8091 63.304 73.6389 63.1697L72.1161 61.961C70.444 60.633 68.7809 59.302 67.1058 57.9799C67.0114 57.9147 66.9367 57.8248 66.8898 57.7201C66.843 57.6154 66.8258 57.4998 66.8401 57.386C66.8879 56.819 67.0222 56.2758 67.3417 55.7954C67.6373 55.3477 68.0344 55.0731 68.5988 55.0881C68.972 55.1 69.3482 55.1119 69.7214 55.0821C70.0049 55.0519 70.2848 54.995 70.5575 54.912C71.0113 54.7837 71.4532 54.5927 71.916 54.4942C73.4412 54.1732 75.0089 54.1056 76.5561 54.2942C77.3742 54.3927 78.1893 54.5091 78.9507 54.8374C79.3275 55.0212 79.7441 55.1084 80.163 55.0911C80.8228 55.0463 81.2468 55.4014 81.5424 55.9446C81.7455 56.3146 81.8291 56.7235 81.8739 57.1443C81.9036 57.3271 81.882 57.5146 81.8113 57.6859C81.7407 57.8572 81.6238 58.0054 81.4737 58.1142C79.5449 59.6959 77.6339 61.2925 75.714 62.8862C74.9556 63.5129 74.9497 63.5129 75.081 64.4858C75.4214 67.0404 76.3142 69.3712 77.8848 71.4244C78.4521 72.1705 79.0881 72.8569 79.8793 73.4985ZM31.6817 100.31C31.822 100.605 31.9444 100.907 32.0997 101.19C32.5267 101.981 33.0641 102.694 33.6314 103.384C34.4914 104.428 35.3394 105.485 36.2052 106.559C36.1336 106.538 36.0619 106.529 35.9962 106.499C33.8391 105.434 31.7624 104.213 29.7827 102.847C28.236 101.76 26.9402 100.414 25.7578 98.952C23.8916 96.6541 22.2822 94.177 20.7923 91.6195C19.8368 89.9751 18.9411 88.2949 18.0214 86.6326C17.9687 86.5311 17.8865 86.4479 17.7855 86.3939C17.7736 86.4983 17.7437 86.6028 17.7557 86.7013C17.8811 87.8204 18.1319 88.9156 18.4364 89.999C18.8097 91.333 19.2008 92.658 19.377 94.0368C19.3949 94.1681 19.4277 94.2964 19.4188 94.4248C19.4128 94.5053 19.3471 94.5799 19.2725 94.7292C19.174 94.5352 19.1083 94.4307 19.0635 94.3113C18.1379 91.8254 16.7285 89.62 15.0624 87.5757C13.7785 85.9999 12.4438 84.472 11.1151 82.935C10.6065 82.3655 10.1647 81.7397 9.79838 81.0698C8.63389 78.8644 7.46045 76.6619 6.68413 74.2804C6.22431 72.8569 5.85705 71.4035 5.47486 69.9531C5.14941 68.7235 4.76722 67.5209 4.10137 66.4226C3.93118 66.1391 3.72814 65.9451 3.37581 65.9899C3.03244 66.0347 2.84134 66.2436 2.75475 66.5688L2.29195 68.2252C2.23521 68.1267 2.1755 68.0521 2.14265 67.9685C1.42371 66.0221 0.798944 64.0421 0.270524 62.0356C-0.0429907 60.8628 -0.0280614 59.6899 0.0406132 58.5141C0.115259 57.1443 0.315311 55.7775 0.727359 54.4554C0.959137 53.6713 1.25061 52.906 1.59923 52.1664C1.87393 51.6053 2.28597 51.098 2.68608 50.6086C3.55197 49.5551 4.45669 48.5255 5.34349 47.4839C5.43306 47.3825 5.51368 47.281 5.59728 47.1766C5.57113 47.1461 5.54425 47.1162 5.51667 47.087L4.45072 47.7346L4.37906 47.666C5.64506 45.0696 7.13201 42.5926 8.72347 40.1813C10.3413 37.7568 12.0545 35.3973 13.8591 33.1083C13.4411 33.2218 12.8141 33.8067 10.518 36.1822C9.47292 37.2626 8.5264 38.4294 7.63961 39.6471L7.56496 39.6023L8.38308 37.4536C8.1681 37.4625 8.09644 37.5968 8.00687 37.6923C6.91106 38.9368 5.80032 40.1693 4.7284 41.4287C3.17304 43.2666 1.69477 45.1683 0.297396 47.1288C0.267538 47.1736 0.225736 47.2124 0.145118 47.3079C0.145118 47.1736 0.130189 47.099 0.145118 47.0303C0.613897 45.2696 1.2887 43.5864 2.08592 41.951C3.35491 39.3486 4.92845 36.9373 6.70205 34.6572C8.51357 32.322 10.5519 30.1718 12.7872 28.2379L13.0739 27.9723C13.1037 27.9454 13.1246 27.9096 13.1186 27.8141C12.9335 27.9036 12.7454 27.9872 12.5663 28.0827C10.5244 29.176 8.24208 29.7433 5.92573 29.7331C4.9449 29.7341 3.96851 29.6015 3.02348 29.3391C2.99959 29.3302 2.98168 29.3063 2.91897 29.2496C3.38477 29.0974 3.8207 28.9661 4.25365 28.8139C5.16135 28.4886 6.07502 28.1782 6.9648 27.8171C8.12331 27.3486 9.0758 26.5786 9.90885 25.6624C11.7451 23.6118 13.6368 21.6116 15.582 19.6639C17.1734 18.0971 18.7888 16.5542 20.64 15.2858C22.5659 13.9638 24.6172 12.9073 26.8655 12.2478C28.1353 11.8651 29.4466 11.6366 30.771 11.5673C30.8714 11.5625 30.9713 11.5495 31.0696 11.5285C31.1084 11.5226 31.1442 11.4957 31.2786 11.433C30.8695 11.3763 30.553 11.3256 30.2335 11.2928C28.5856 11.1488 26.9448 10.9327 25.3158 10.6452C22.7749 10.1647 20.2936 9.48127 17.9348 8.40989C16.1015 7.57427 14.3906 6.55363 12.8857 5.19873C11.9064 4.34576 11.0742 3.33751 10.4224 2.21439C10.3776 2.13381 10.3478 2.05622 10.303 1.96072C10.5359 2.04428 10.5329 2.04726 10.8404 2.34868C11.3383 2.84784 11.8722 3.30967 12.4379 3.73043C13.0043 4.15111 13.5891 4.54643 14.1906 4.91522C14.9967 5.39069 15.8291 5.82012 16.6838 6.20147C16.9107 6.30294 17.1346 6.39844 17.3615 6.49096C17.5765 6.58049 17.7915 6.65808 18.0065 6.73866C18.2215 6.82222 18.4364 6.90578 18.6544 6.98337C18.8843 7.06097 19.1202 7.13259 19.3531 7.20421C19.793 7.34591 20.2382 7.47036 20.6878 7.57726C20.9117 7.63396 21.1357 7.68768 21.3596 7.73543C21.5985 7.78915 21.8373 7.83391 22.0792 7.88465L22.757 8.01596C23.2247 8.10276 23.6959 8.16947 24.1693 8.21591C24.3902 8.2368 24.6112 8.24575 24.8321 8.26067L24.871 8.15921L24.5127 7.88166C22.7629 6.49692 21.9538 4.67349 21.9836 2.45313C22.0036 1.94574 22.1548 1.45218 22.4226 1.02065C22.6196 0.677447 22.8495 0.346184 23.0705 0C23.2646 0.13728 23.1899 0.292466 23.178 0.420793C23.1183 1.53395 23.3153 2.60534 23.6438 3.66179C24.1096 5.15994 25.1397 6.12388 26.5878 6.66405C28.0897 7.21914 29.6573 7.44893 31.2458 7.5116C32.3505 7.55637 33.4613 7.5116 34.572 7.49668C34.7109 7.49136 34.846 7.44913 34.9631 7.37432C33.1806 6.58049 31.404 5.81351 29.708 4.86449C31.1114 5.21067 32.5207 5.56879 33.93 5.90005C35.3603 6.23729 36.7994 6.51781 38.2894 6.66405C38.1311 6.57153 37.9788 6.46708 37.8176 6.3865C36.9464 5.96806 36.1132 5.47479 35.3274 4.91224L35.0856 4.71825C35.2886 4.7481 35.405 4.75407 35.5185 4.78391C36.8801 5.15397 38.2715 5.39272 39.6629 5.61953C42.1829 6.02838 44.7149 6.30593 47.2529 6.54467C48.8175 6.69389 50.3821 6.81327 51.9496 6.90876C54.5593 7.06395 57.1331 7.45192 59.6502 8.1801C62.0388 8.86948 64.3141 9.83939 66.44 11.1376C66.5893 11.2271 66.7386 11.3047 66.9386 11.3465C66.8938 11.2749 66.858 11.1913 66.8013 11.1256C66.1003 10.3788 65.2825 9.7508 64.3797 9.2664C62.8868 8.4278 61.2774 7.88763 59.6203 7.48176C57.6274 7.0172 55.6005 6.71282 53.559 6.57153C53.4784 6.56966 53.401 6.53896 53.3411 6.48499C53.4694 6.45514 53.5978 6.41635 53.7292 6.39546C55.7673 6.09833 57.8212 5.92096 59.8801 5.86424C61.8597 5.80456 63.8274 5.90304 65.7861 6.15969C67.9956 6.44619 70.1454 6.97442 72.1668 7.94433C73.5553 8.60984 74.8153 9.46038 75.8484 10.6183C75.9828 10.7675 76.138 10.8959 76.2843 11.0361C76.2336 10.5944 76.1022 10.3975 74.872 8.85157C75.29 9.16792 75.723 9.47232 76.135 9.8006C77.9595 11.2449 79.5003 13.0147 80.6795 15.0202C81.835 17.0287 82.5009 19.1834 82.6591 21.4963C82.6711 21.6693 82.6442 21.8544 82.9279 21.8902C82.9607 21.8096 83.0204 21.726 83.0264 21.6395C83.0951 20.9233 83.1578 20.204 83.2175 19.4878C83.2324 19.3087 83.2414 19.1297 83.3041 18.9417C83.522 19.2908 83.5429 19.6937 83.6564 20.0817C83.8863 19.455 83.4713 17.1869 82.8741 15.5962C82.3307 14.1652 81.546 12.8379 80.5541 11.6718C79.5568 10.49 78.3595 9.53201 77.1264 8.60387C77.5742 8.85456 78.0281 9.09629 78.47 9.3619C80.2833 10.4317 81.977 11.6923 83.522 13.1222C85.4031 14.8829 86.9856 16.8616 88.0814 19.2102C88.9175 20.9949 89.3773 22.872 89.4549 24.8417C89.4579 24.9804 89.4842 25.1176 89.5326 25.2476C89.8849 23.7554 89.9297 22.2394 89.9804 20.7114C90.9717 22.9347 91.5898 25.2476 91.7152 27.6828C91.8406 30.124 91.4734 32.4757 90.3746 34.7617C90.6433 34.7109 90.7329 34.5707 90.8314 34.4424C91.2405 33.9082 91.5301 33.3173 91.7779 32.6995C91.832 32.552 91.9074 32.4132 92.0019 32.2877C92.1959 34.0484 92.0347 35.6988 90.5955 36.9432L91.5182 38.3847C91.548 38.4354 91.5898 38.4802 91.6018 38.5339C91.7122 39.0174 92.0556 39.1845 92.5005 39.2621C92.8678 39.3247 93.2261 39.4411 93.6411 39.5486C93.6471 40.1335 93.6859 40.7065 93.653 41.2765C93.5993 42.2106 93.5037 43.1417 93.4052 44.0728C93.3787 44.328 93.4135 44.5859 93.5067 44.8249C93.7904 45.6247 94.0651 46.4275 94.304 47.2422C94.5727 48.1703 94.8205 49.1045 94.925 50.0684C95.0683 51.3755 95.0325 52.6648 94.5846 53.9093C94.4174 54.3659 94.1606 54.7896 93.9188 55.2164C93.8202 55.3895 93.7396 55.5238 93.868 55.7237C93.9298 55.8379 93.9577 55.9673 93.9486 56.0968C93.9038 57.004 94.1188 57.8725 94.3308 58.7379C94.7279 60.3733 94.9131 62.0326 94.9788 63.7069C95.0683 66.1122 94.7817 68.4818 94.3129 70.8395C93.7736 73.4805 93.0523 76.081 92.1541 78.6226C91.6078 80.2024 91.0445 81.7762 90.4641 83.3439C90.291 83.8124 90.0282 84.2511 89.8073 84.7047C89.2044 85.95 88.6934 87.2377 88.2785 88.5575C88.2486 88.65 88.2039 88.7366 88.1292 88.9156L87.7649 88.1755C87.6186 87.8771 87.4962 87.8413 87.2544 88.08C86.7908 88.5369 86.4153 89.0751 86.1466 89.6677C85.7316 90.6048 85.3464 91.5508 84.9821 92.5088C83.101 97.4777 80.578 102.08 77.2547 106.237C75.362 108.562 73.3362 110.776 71.1875 112.868C69.4401 114.566 67.8185 116.388 66.3355 118.32C66.2579 118.422 66.1713 118.514 66.0608 118.643L65.6338 118.189C64.1216 116.644 62.5509 115.158 60.9251 113.733C59.1049 112.138 57.2013 110.639 55.2221 109.245C53.134 107.757 50.9485 106.411 48.6801 105.216C47.8888 104.798 47.041 104.496 46.1631 104.321C44.9972 104.074 43.7815 104.245 42.7293 104.804C42.2098 105.079 42.0008 105.518 42.0814 106.1L42.1292 106.398C38.1819 105.139 34.5989 103.342 31.7981 100.22L31.6847 100.31H31.6817Z\" fill=\"#323838\"/>\n</svg>\n\n)\n\nexport default Lanars\n","import React, { useState } from 'react'\nimport Board from './Board'\nimport DifficultyModal from './DifficultyModal'\nimport  { withTheme } from 'styled-components'\nimport Button from './primitives/Button'\nimport Lanars from './primitives/Icon/Lanars'\n\nconst Game = ({theme}) => {\n    const [difficulty, setDifficulty] = useState('Easy')\n    const [modalShow, setModalShow] = useState(false)\n    const [solved, setSolved] = useState(false)\n    const [newGame, setNewGame] = useState(false)\n\n    const handleModalShow = () => {\n        setModalShow(true)\n    }\n\n    const handleModalClose = () => {\n        setModalShow(false)\n    }\n\n    const handleSolve = () => {\n        setSolved(true)\n    }\n\n    const handleUnSolve = () => {\n        setSolved(false)\n    }\n\n    const handleNewGame = () => {\n        setNewGame(true)\n    }\n    \n    const handleDifficulty = (diff) => {\n        setDifficulty(diff)\n        setNewGame(true)\n    }\n\n    const renderModal = () => (\n        <DifficultyModal \n        isOpen={modalShow} \n        onClose={() => handleModalClose()} \n        difficulty={difficulty} \n        handleDifficulty={handleDifficulty}\n        />\n    )\n\n    return (\n        <>\n            <div style={{display: 'flex'}}>\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\n                    <Lanars />\n                    <p style={{color: '#323838', writingMode: 'vertical-rl', textOrientation: 'mixed', fontSize: '100px', marginTop: '20px'}}>SUDOKU</p>\n                </div>\n                <div>\n                    <Board difficulty={difficulty} setNewGame={setNewGame} solved={solved} newGame={newGame} handleUnSolve={() => handleUnSolve()} />\n                    <div style={{display: 'flex', margin: '3rem auto'}}>\n                        <Button \n                            style={{margin: '0 5px'}}\n                            variant=\"primary\" \n                            color=\"primary\" \n                            fontSize={theme.fontSize.big}\n                            fluid \n                            circular \n                            onClick={() => handleModalShow()}>\n                            Change Difficulty\n                        </Button>\n                        <Button \n                            style={{margin: '0 5px'}}\n                            variant=\"primary\" \n                            color=\"primary\" \n                            fontSize={theme.fontSize.big}\n                            fluid \n                            circular \n                            onClick={() => handleNewGame()}>\n                            Create New Puzzle\n                        </Button>\n                        <Button \n                            style={{margin: '0 5px'}}\n                            variant=\"primary\" \n                            color=\"primary\" \n                            fontSize={theme.fontSize.big}\n                            fluid \n                            circular \n                            onClick={() => handleSolve()}>\n                            Solve it!\n                        </Button>\n                    </div>\n                </div>\n                {difficulty && renderModal()}\n            </div>\n        </>\n    )\n}\n\nexport default withTheme(Game)","import React from 'react'\nimport Game from './components/Game'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: ${props => props.theme.fontFamily.default};\n    font-size: 14px !important;\n    line-height: 1.5;\n    margin: 0;\n  }\n  @media (min-width: 568px) {\n    body{\n      font-size: 8px !important;\n    }\n  }\n  @media (min-width: 968) {\n    body{\n      font-size: 12px !important;\n    }\n    \n  }\n\n  input, textarea {\n    font-family: ${props => props.theme.fontFamily.default};\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: ${props => props.theme.fontFamily.bold};\n    margin: 2px 0;\n    line-height: 1;\n    font-weight: unset;\n  }\n\n  button {\n    font-family: ${props => props.theme.fontFamily.bold};\n    margin: 0;\n    line-height: 1;\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 1rem;\n  }\n\n  small {\n    line-height: 1;\n  }\n\n  ol {\n    padding: 0 1.2rem;\n  }\n\n  img {\n    vertical-align: middle;\n  }\n\n\n`\n\nexport default GlobalStyle\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport GlobalStyle from './styled/global'\nimport { ThemeProvider } from 'styled-components'\nimport { themes, defaultTheme } from './styled/themes'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={themes[defaultTheme]}>\n      <GlobalStyle />\n        <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const themes = {\n  light: {\n    type: 'light',\n    fontFamily: {\n      default: 'OpenSans-Regular, Roboto, sans-serif',\n      bold: 'Mont-Bold, Roboto, sans-serif'\n    },\n    fontSize: {\n      tiny: '11px',\n      mini: '12px',\n      small: '13px',\n      default: '14px',\n      big: '1.1rem',\n      large: '24px'\n    },\n    color: {\n      white: '#fff',\n      whiteSecondary: 'rgba(255, 255, 255, .54)',\n      default: 'rgba(0, 0, 0, .54)',\n      primary: '#181EAD',\n      black: 'rgba(0, 0, 0, .74)',\n      // secondary: 'rgba(0, 0, 0, .54)',\n      // placeholder: 'rgba(0, 0, 0, .34)',\n      // disabled: 'rgba(0, 0, 0, .04)',\n      // border: 'rgba(0, 0, 0, .15)',\n      // borderHover: 'rgba(0, 0, 0, .35)',\n      // elementBg: '#fff',\n      // elementBgSecondary: 'rgba(0,0,0, .034)',\n      // elementHover: 'rgba(0, 0, 0, .06)',\n      info: 'rgba(250, 120, 16, 1)',\n      success: 'rgba(0, 217, 176, 1)'\n    },\n    palette: {\n      transparent: {\n        200: 'rgba(0, 0, 0, 0)',\n        300: 'rgba(0, 0, 0, 0.064)',\n        500: 'rgba(0, 0, 0, 0)',\n        1000: 'rgba(0, 0, 0, 0.54)'\n      },\n      default: {\n        200: 'rgba(0, 0, 0, .034)',\n        300: 'rgba(0, 0, 0, .084)',\n        500: 'rgba(0, 0, 0, .34)',\n        1000: 'rgba(0, 0, 0, .44)'\n      },\n      inverted: {\n        200: 'rgba(255, 255, 255, .034)',\n        500: 'rgba(255, 255, 255, .34)',\n        700: 'rgba(255, 255, 255, .54)',\n        1000: 'rgba(255, 255, 255, 1)'\n      },\n      primary: {\n        200: '#181EAD',\n        500: 'rgba(38, 117, 254, .54)',\n        800: 'rgba(38, 117, 254, .84)',\n        900: 'rgba(38, 117, 254, .94)',\n        1000: '#fff'\n      },\n    },\n    elementSize: {\n      tiny: '24px',\n      mini: '32px',\n      small: '40px',\n      default: '48px',\n      big: '56px',\n      large: '64px'\n    },\n    borderRadius: {\n      tiny: '2px',\n      small: '4px',\n      default: '6px',\n      big: '8px',\n      circular: '100%',\n      rounded: '100rem'\n    },\n    boxShadow: {\n      default: '1px 4px 8px rgba(0, 0, 0, 0.1)',\n      primary: '0px 1px 4px rgba(0, 0, 0, 0.36)'\n    },\n    spacing: {\n      noSpacing: 0,\n      tiny: 2,\n      mini: 4,\n      small: 6,\n      default: 8,\n      big: 16,\n      large: 24,\n      extraLarge: 32,\n      huge: 38,\n      extraHuge: 44\n    },\n    animation: {\n      easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n      // Objects enter the screen at full velocity from off-screen and\n      // slowly decelerate to a resting point.\n      easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n      // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n      easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n      // The sharp curve is used by objects that may return to the screen at any time.\n      sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n    },\n    duration: {\n      shortest: 150,\n      shorter: 200,\n      short: 250,\n      // most basic recommended timing\n      default: 300,\n      // this is to be used in complex animations\n      complex: 375,\n      // recommended when something is entering screen\n      enteringScreen: 225,\n      // recommended when something is leaving screen\n      leavingScreen: 195\n    }\n  }\n}\n\nexport const defaultTheme = 'light'\n"],"sourceRoot":""}